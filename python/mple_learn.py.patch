# Patch generated by Pyment v0.3.3

--- a/mple_learn.py
+++ b/mple_learn.py
@@ -14,6 +14,7 @@
 from rpy2.robjects import Formula
 
 class stergmGraph:
+    """ """
     def __init__(
         self,
         X,
@@ -38,10 +39,20 @@
     
     
     def theta_update_hess(self, theta, X):
-        """Update the Hessian in Newton's step 
-
+        """Update the Hessian in Newton's step
+        
         theta: T x p
-        
+
+        Parameters
+        ----------
+        theta :
+            
+        X :
+            
+
+        Returns
+        -------
+
         """
         p = self.pf + self.pd
         H = np.zeros((self.tslen, self.n**2, p))  # compute H: T x E x p
@@ -67,6 +78,23 @@
     
     
     def theta_update_grad(self, theta, X, z, u):
+        """
+
+        Parameters
+        ----------
+        theta :
+            
+        X :
+            
+        z :
+            
+        u :
+            
+
+        Returns
+        -------
+
+        """
         y = X.reshape(self.tslen, -1) # T x E
         pnlty = self.admm_alpha * (theta - z + u) # T x p
         grad = (- self.H.transpose(0,2,1) @ (y - self.mu)).squeeze() + pnlty
@@ -74,10 +102,39 @@
         
         
     def theta_update(self, theta, X, z, u):
+        """
+
+        Parameters
+        ----------
+        theta :
+            
+        X :
+            
+        z :
+            
+        u :
+            
+
+        Returns
+        -------
+
+        """
         pass
     
     def g_delta(self, yt0, yt1):
-        """ Compute the change stat in mple for all edges  """
+        """Compute the change stat in mple for all edges
+
+        Parameters
+        ----------
+        yt0 :
+            
+        yt1 :
+            
+
+        Returns
+        -------
+
+        """
         # 1. take union. 2. run ergmMPLE, 3. correct
         ypos = np.logical_or(yt0, yt1).astype(int)
         yneg = np.logical_and(yt0, yt1).astype(int)
@@ -104,6 +161,17 @@
         
 
 def sigmoid(x):
+    """
+
+    Parameters
+    ----------
+    x :
+        
+
+    Returns
+    -------
+
+    """
     return 1/(1 + np.exp(-x))            
 
 
